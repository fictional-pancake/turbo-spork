2/5/16:
	This week I studied what we can do with Heroku, and
	whether it's going to be suitable for our project.
	So far, it appears that it will work, since it has
	support for plenty of technologies, including
	Node.js, websockets, and PostgreSQL, which we'll
	probably be using.  I wrote a rough protocol
	specification outlining generally what we're going
	to do for client-server-communication.  I also put
	together the initial server implementation, with a
	very bare-bones web server and a slightly more
	useful WebSocket server.  It's no game yet, but
	we're getting there.  As far as I can tell, Heroku
	only works with HTTP traffic, which is why the
	server is using WebSockets instead of normal
	sockets.  It's likely that we'll need a web server
	anyway though, so I think it's a good idea.  I also
	set up a PostgreSQL server on Heroku and my laptop.
	I studied db-migrate and it looks quite useful.

2/13/16:
	This week I started working with db-migrate and
	used it to set up the users table in the database.
	I also briefly studied password hashing methods and
	(probably prematurely) settled on bcrypt.  Not that
	we store any sensitive data at all, but prevention
	is simple and good practice.  I found
	bcrypt-nodejs, which should simplify trying to use
	it.  It seems to store the salt as part of the
	hash, so we don't need a separate column for that.
	In other news, I did a little more work on the game
	server, laying foundations to make it easier to
	handle messages from the client, and using that to
	allow users to join game rooms, though they're not
	actually useful yet, currently they only notify
	other users of your presence.  I also tried to
	detect disconnections and remove those players
	from their rooms.  I think it's working, but
	that's what testing is for!
